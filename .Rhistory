camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
#| message: false
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
all_data <- list_packages(limit = 500)
res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)
# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)
# note: I obtained these codes from the 'id' column in the `res` object above
delay_codes <- get_resource("3900e649-f31e-4b79-9f20-4731bbfd94f7")
delay_data_codebook <- get_resource("ca43ac3d-3940-4315-889b-a9375e7b8aa4")
## Removing the observations that have non-standardized lines
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 <- delay_2022 |>
left_join(delay_codes |> rename(code = `SUB RMENU CODE`, code_desc = `CODE DESCRIPTION...3`) |> select(code, code_desc))
delay_2022 <- delay_2022 |>
mutate(code_srt = ifelse(line=="SRT", code, "NA")) |>
left_join(delay_codes |> rename(code_srt = `SRT RMENU CODE`, code_desc_srt = `CODE DESCRIPTION...7`) |> select(code_srt, code_desc_srt))  |>
mutate(code = ifelse(code_srt=="NA", code, code_srt),
code_desc = ifelse(is.na(code_desc_srt), code_desc, code_desc_srt)) |>
select(-code_srt, -code_desc_srt)
delay_2022 <- delay_2022 |>
mutate(station_clean = ifelse(str_starts(station, "ST"), word(station, 1,2), word(station, 1)))
delay_2022 <- delay_2022 |>
mutate(code_red = case_when(
str_starts(code_desc, "No") ~ word(code_desc, 1, 2),
str_starts(code_desc, "Operator") ~ word(code_desc, 1,2),
TRUE ~ word(code_desc,1))
)
dwide <- delay_2022 |>
group_by(line, station_clean) |>
mutate(n_obs = n()) |>
filter(n_obs>1) |>
group_by(code_red) |>
mutate(tot_delay = n()) |>
arrange(tot_delay) |>
filter(tot_delay>50) |>
group_by(line, station_clean, code_red) |>
summarise(n_delay = n()) |>
pivot_wider(names_from = code_red, values_from = n_delay) |>
mutate(
across(everything(), ~ replace_na(.x, 0))
)
delay_pca <- prcomp(dwide[,3:ncol(dwide)])
df_out <- as_tibble(delay_pca$x)
df_out <- bind_cols(dwide |> select(line, station_clean), df_out)
df_out_r <- as_tibble(delay_pca$rotation)
df_out_r$feature <- colnames(dwide[,3:ncol(dwide)])
delay_2022 |>
group_by(line, station) |>
summarise(mean_delay = mean(min_delay)) |>
arrange(-mean_delay) |>
slice(1:5) |>
ggplot(aes(x = station,
y = mean_delay)) +
geom_col() +
facet_wrap(vars(line),
scales = "free_y",
nrow = 4) +
coord_flip()
cam <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
#res <- res |> mutate(year = str_extract(name, "202.?"))
#delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
camp_2014_1 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")
camp_2014 <- camp_2014_1[[2]]
names(camp_2014) <- camp_2014[1,]
camp_2014 <- camp_2014[-1,]
camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
#| message: false
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
all_data <- list_packages(limit = 500)
res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)
# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)
# note: I obtained these codes from the 'id' column in the `res` object above
delay_codes <- get_resource("3900e649-f31e-4b79-9f20-4731bbfd94f7")
delay_data_codebook <- get_resource("ca43ac3d-3940-4315-889b-a9375e7b8aa4")
## Removing the observations that have non-standardized lines
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 <- delay_2022 |>
left_join(delay_codes |> rename(code = `SUB RMENU CODE`, code_desc = `CODE DESCRIPTION...3`) |> select(code, code_desc))
delay_2022 <- delay_2022 |>
mutate(code_srt = ifelse(line=="SRT", code, "NA")) |>
left_join(delay_codes |> rename(code_srt = `SRT RMENU CODE`, code_desc_srt = `CODE DESCRIPTION...7`) |> select(code_srt, code_desc_srt))  |>
mutate(code = ifelse(code_srt=="NA", code, code_srt),
code_desc = ifelse(is.na(code_desc_srt), code_desc, code_desc_srt)) |>
select(-code_srt, -code_desc_srt)
delay_2022 <- delay_2022 |>
mutate(station_clean = ifelse(str_starts(station, "ST"), word(station, 1,2), word(station, 1)))
delay_2022 <- delay_2022 |>
mutate(code_red = case_when(
str_starts(code_desc, "No") ~ word(code_desc, 1, 2),
str_starts(code_desc, "Operator") ~ word(code_desc, 1,2),
TRUE ~ word(code_desc,1))
)
dwide <- delay_2022 |>
group_by(line, station_clean) |>
mutate(n_obs = n()) |>
filter(n_obs>1) |>
group_by(code_red) |>
mutate(tot_delay = n()) |>
arrange(tot_delay) |>
filter(tot_delay>50) |>
group_by(line, station_clean, code_red) |>
summarise(n_delay = n()) |>
pivot_wider(names_from = code_red, values_from = n_delay) |>
mutate(
across(everything(), ~ replace_na(.x, 0))
)
delay_pca <- prcomp(dwide[,3:ncol(dwide)])
df_out <- as_tibble(delay_pca$x)
df_out <- bind_cols(dwide |> select(line, station_clean), df_out)
df_out_r <- as_tibble(delay_pca$rotation)
df_out_r$feature <- colnames(dwide[,3:ncol(dwide)])
delay_2022 |>
group_by(line, station) |>
summarise(mean_delay = mean(min_delay)) |>
arrange(-mean_delay) |>
slice(1:5) |>
ggplot(aes(x = station,
y = mean_delay)) +
geom_col() +
facet_wrap(vars(line),
scales = "free_y",
nrow = 4) +
coord_flip()
cam <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
#res <- res |> mutate(year = str_extract(name, "202.?"))
#delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
camp_2014_1 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")
camp_2014 <- camp_2014_1[[2]]
names(camp_2014) <- camp_2014[1,]
camp_2014 <- camp_2014[-1,]
camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
#| message: false
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
all_data <- list_packages(limit = 500)
res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)
# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)
# note: I obtained these codes from the 'id' column in the `res` object above
delay_codes <- get_resource("3900e649-f31e-4b79-9f20-4731bbfd94f7")
delay_data_codebook <- get_resource("ca43ac3d-3940-4315-889b-a9375e7b8aa4")
## Removing the observations that have non-standardized lines
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 <- delay_2022 |>
left_join(delay_codes |> rename(code = `SUB RMENU CODE`, code_desc = `CODE DESCRIPTION...3`) |> select(code, code_desc))
delay_2022 <- delay_2022 |>
mutate(code_srt = ifelse(line=="SRT", code, "NA")) |>
left_join(delay_codes |> rename(code_srt = `SRT RMENU CODE`, code_desc_srt = `CODE DESCRIPTION...7`) |> select(code_srt, code_desc_srt))  |>
mutate(code = ifelse(code_srt=="NA", code, code_srt),
code_desc = ifelse(is.na(code_desc_srt), code_desc, code_desc_srt)) |>
select(-code_srt, -code_desc_srt)
delay_2022 <- delay_2022 |>
mutate(station_clean = ifelse(str_starts(station, "ST"), word(station, 1,2), word(station, 1)))
delay_2022 <- delay_2022 |>
mutate(code_red = case_when(
str_starts(code_desc, "No") ~ word(code_desc, 1, 2),
str_starts(code_desc, "Operator") ~ word(code_desc, 1,2),
TRUE ~ word(code_desc,1))
)
dwide <- delay_2022 |>
group_by(line, station_clean) |>
mutate(n_obs = n()) |>
filter(n_obs>1) |>
group_by(code_red) |>
mutate(tot_delay = n()) |>
arrange(tot_delay) |>
filter(tot_delay>50) |>
group_by(line, station_clean, code_red) |>
summarise(n_delay = n()) |>
pivot_wider(names_from = code_red, values_from = n_delay) |>
mutate(
across(everything(), ~ replace_na(.x, 0)))
delay_pca <- prcomp(dwide[,3:ncol(dwide)])
df_out <- as_tibble(delay_pca$x)
df_out <- bind_cols(dwide |> select(line, station_clean), df_out)
df_out_r <- as_tibble(delay_pca$rotation)
df_out_r$feature <- colnames(dwide[,3:ncol(dwide)])
delay_2022 |>
group_by(line, station) |>
summarise(mean_delay = mean(min_delay)) |>
arrange(-mean_delay) |>
slice(1:5) |>
ggplot(aes(x = station,
y = mean_delay)) +
geom_col() +
facet_wrap(vars(line),
scales = "free_y",
nrow = 4) +
coord_flip()
cam <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
#res <- res |> mutate(year = str_extract(name, "202.?"))
#delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
camp_2014_1 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")
camp_2014 <- camp_2014_1[[2]]
names(camp_2014) <- camp_2014[1,]
camp_2014 <- camp_2014[-1,]
camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
