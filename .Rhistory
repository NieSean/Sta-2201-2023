camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
#| message: false
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
all_data <- list_packages(limit = 500)
res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)
# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)
# note: I obtained these codes from the 'id' column in the `res` object above
delay_codes <- get_resource("3900e649-f31e-4b79-9f20-4731bbfd94f7")
delay_data_codebook <- get_resource("ca43ac3d-3940-4315-889b-a9375e7b8aa4")
## Removing the observations that have non-standardized lines
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 <- delay_2022 |>
left_join(delay_codes |> rename(code = `SUB RMENU CODE`, code_desc = `CODE DESCRIPTION...3`) |> select(code, code_desc))
delay_2022 <- delay_2022 |>
mutate(code_srt = ifelse(line=="SRT", code, "NA")) |>
left_join(delay_codes |> rename(code_srt = `SRT RMENU CODE`, code_desc_srt = `CODE DESCRIPTION...7`) |> select(code_srt, code_desc_srt))  |>
mutate(code = ifelse(code_srt=="NA", code, code_srt),
code_desc = ifelse(is.na(code_desc_srt), code_desc, code_desc_srt)) |>
select(-code_srt, -code_desc_srt)
delay_2022 <- delay_2022 |>
mutate(station_clean = ifelse(str_starts(station, "ST"), word(station, 1,2), word(station, 1)))
delay_2022 <- delay_2022 |>
mutate(code_red = case_when(
str_starts(code_desc, "No") ~ word(code_desc, 1, 2),
str_starts(code_desc, "Operator") ~ word(code_desc, 1,2),
TRUE ~ word(code_desc,1))
)
dwide <- delay_2022 |>
group_by(line, station_clean) |>
mutate(n_obs = n()) |>
filter(n_obs>1) |>
group_by(code_red) |>
mutate(tot_delay = n()) |>
arrange(tot_delay) |>
filter(tot_delay>50) |>
group_by(line, station_clean, code_red) |>
summarise(n_delay = n()) |>
pivot_wider(names_from = code_red, values_from = n_delay) |>
mutate(
across(everything(), ~ replace_na(.x, 0))
)
delay_pca <- prcomp(dwide[,3:ncol(dwide)])
df_out <- as_tibble(delay_pca$x)
df_out <- bind_cols(dwide |> select(line, station_clean), df_out)
df_out_r <- as_tibble(delay_pca$rotation)
df_out_r$feature <- colnames(dwide[,3:ncol(dwide)])
delay_2022 |>
group_by(line, station) |>
summarise(mean_delay = mean(min_delay)) |>
arrange(-mean_delay) |>
slice(1:5) |>
ggplot(aes(x = station,
y = mean_delay)) +
geom_col() +
facet_wrap(vars(line),
scales = "free_y",
nrow = 4) +
coord_flip()
cam <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
#res <- res |> mutate(year = str_extract(name, "202.?"))
#delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
camp_2014_1 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")
camp_2014 <- camp_2014_1[[2]]
names(camp_2014) <- camp_2014[1,]
camp_2014 <- camp_2014[-1,]
camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
#| message: false
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
all_data <- list_packages(limit = 500)
res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)
# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)
# note: I obtained these codes from the 'id' column in the `res` object above
delay_codes <- get_resource("3900e649-f31e-4b79-9f20-4731bbfd94f7")
delay_data_codebook <- get_resource("ca43ac3d-3940-4315-889b-a9375e7b8aa4")
## Removing the observations that have non-standardized lines
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 <- delay_2022 |>
left_join(delay_codes |> rename(code = `SUB RMENU CODE`, code_desc = `CODE DESCRIPTION...3`) |> select(code, code_desc))
delay_2022 <- delay_2022 |>
mutate(code_srt = ifelse(line=="SRT", code, "NA")) |>
left_join(delay_codes |> rename(code_srt = `SRT RMENU CODE`, code_desc_srt = `CODE DESCRIPTION...7`) |> select(code_srt, code_desc_srt))  |>
mutate(code = ifelse(code_srt=="NA", code, code_srt),
code_desc = ifelse(is.na(code_desc_srt), code_desc, code_desc_srt)) |>
select(-code_srt, -code_desc_srt)
delay_2022 <- delay_2022 |>
mutate(station_clean = ifelse(str_starts(station, "ST"), word(station, 1,2), word(station, 1)))
delay_2022 <- delay_2022 |>
mutate(code_red = case_when(
str_starts(code_desc, "No") ~ word(code_desc, 1, 2),
str_starts(code_desc, "Operator") ~ word(code_desc, 1,2),
TRUE ~ word(code_desc,1))
)
dwide <- delay_2022 |>
group_by(line, station_clean) |>
mutate(n_obs = n()) |>
filter(n_obs>1) |>
group_by(code_red) |>
mutate(tot_delay = n()) |>
arrange(tot_delay) |>
filter(tot_delay>50) |>
group_by(line, station_clean, code_red) |>
summarise(n_delay = n()) |>
pivot_wider(names_from = code_red, values_from = n_delay) |>
mutate(
across(everything(), ~ replace_na(.x, 0)))
delay_pca <- prcomp(dwide[,3:ncol(dwide)])
df_out <- as_tibble(delay_pca$x)
df_out <- bind_cols(dwide |> select(line, station_clean), df_out)
df_out_r <- as_tibble(delay_pca$rotation)
df_out_r$feature <- colnames(dwide[,3:ncol(dwide)])
delay_2022 |>
group_by(line, station) |>
summarise(mean_delay = mean(min_delay)) |>
arrange(-mean_delay) |>
slice(1:5) |>
ggplot(aes(x = station,
y = mean_delay)) +
geom_col() +
facet_wrap(vars(line),
scales = "free_y",
nrow = 4) +
coord_flip()
cam <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
#res <- res |> mutate(year = str_extract(name, "202.?"))
#delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
camp_2014_1 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")
camp_2014 <- camp_2014_1[[2]]
names(camp_2014) <- camp_2014[1,]
camp_2014 <- camp_2014[-1,]
camp_2014 |>
slice_head(n = 5)
camp_2014 <- clean_names(camp_2014)
camp_2014 |>
slice_head(n = 5)
skim(camp_2014)
camp_2014 <- camp_2014 |>
mutate(num_contribution_amount = as.numeric(contribution_amount))
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
ggplot(data = camp_2014) +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
arrange(-num_contribution_amount) |>
slice_head(n=20)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
labs(title = 'contribution distribution',
x = 'contribution amount')
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
ggplot() +
geom_histogram(aes(x = num_contribution_amount)) +
scale_x_log10() +
labs(title = 'log contribution distribution',
x = 'log contribution amount')
camp_2014 |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(total_contributions = sum(num_contribution_amount)) |>
arrange(-total_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(mean_contributions = mean(num_contribution_amount)) |>
arrange(-mean_contributions) |>
slice_head(n = 5)
camp_2014 |>
filter(relationship_to_candidate != "Candidate" | is.na(relationship_to_candidate)) |>
group_by(candidate) |>
summarise(number_of_contributions = n()) |>
arrange(-number_of_contributions) |>
slice_head(n = 5)
camp_2014 |>
group_by(contributors_name) |>
summarise(num_candidate_contributed = n_distinct(candidate)) |>
filter(num_candidate_contributed > 1) |>
nrow()
observe.i <- c(
5,13,18,5,10,18,29,10,15,22,4,11,10,22,13,14,17,21,25,6,11,21,13,5,19,18,14,17,3,10,
7,3,12,11,6,16,13,6,9,10,4,9,11,12,23,18,12,7,13,12,12,13,6,14,7,18,13,9,6,8,7,6,16,4,6,12,5,5,
17,5,7,2,9,7,6,12,13,17,5,5,6,12,10,16,10,16,15,18,6,12,6,8,33,15,14,18,25,14,2,73,13,14,6,20,8,
12,10,3,11,3,11,13,11,13,10,5,18,10,23,5,9,2,11,9,11,6,11,5,19,15,4,8,9,6,4,4,2,12,12,11,9,7,7,
8,12,11,23,7,16,46,9,18,12,13,14,14,3,9,15,6,13,13,12,8,11,5,9,8,22,9,2,10,6,10,12,9,11,32,5,11,
9,11,11,0,9,3,11,11,11,5,4,8,9,30,110)
expect.i <- c(
6.17,8.44,7.23,5.62,4.18,29.35,11.79,12.35,7.28,9.40,3.77,3.41,8.70,9.57,8.18,4.35,
4.91,10.66,16.99,2.94,3.07,5.50,6.47,4.85,9.85,6.95,5.74,5.70,2.22,3.46,4.40,4.05,5.74,6.36,5.13,
16.99,6.19,5.56,11.69,4.69,6.25,10.84,8.40,13.19,9.25,16.98,8.39,2.86,9.70,12.12,12.94,9.77,
10.34,5.09,3.29,17.19,5.42,11.39,8.33,4.97,7.14,6.74,17.01,5.80,4.84,12.00,4.50,4.39,16.35,6.02,
6.42,5.26,4.59,11.86,4.05,5.48,13.13,8.72,2.87,2.13,4.48,5.85,6.67,6.11,5.78,12.31,10.56,10.23,
2.52,6.22,14.29,5.71,37.93,7.81,9.86,11.61,18.52,12.28,5.41,61.96,8.55,12.07,4.29,19.42,8.25,
12.90,4.76,5.56,11.11,4.76,10.48,13.13,12.94,14.61,9.26,6.94,16.82,33.49,20.91,5.32,6.77,8.70,
12.94,16.07,8.87,7.79,14.60,5.10,24.42,17.78,4.04,7.84,9.89,8.45,5.06,4.49,6.25,9.16,12.37,8.40,
9.57,5.83,9.21,9.64,9.09,12.94,17.42,10.29,7.14,92.50,14.29,15.61,6.00,8.55,15.22,18.42,5.77,
18.37,13.16,7.69,14.61,15.85,12.77,7.41,14.86,6.94,5.66,9.88,102.16,7.63,5.13,7.58,8.00,12.82,
18.75,12.33,5.88,64.64,8.62,12.09,11.11,14.10,10.48,7.00,10.23,6.82,15.71,9.65,8.59,8.33,6.06,
12.31,8.91,50.10,288.00)
aff.i <- c(0.2415,0.2309,0.3999,0.2977,0.3264,0.3346,0.4150,0.4202,0.1023,0.1752,
0.2548,0.3248,0.2287,0.2520,0.2058,0.2785,0.2528,0.1847,0.3736,0.2411,
0.3700,0.2997,0.2883,0.2427,0.3782,0.1865,0.2633,0.2978,0.3541,0.4176,
0.2910,0.3431,0.1168,0.2195,0.2911,0.4297,0.2119,0.2698,0.0874,0.3204,
0.1839,0.1796,0.2471,0.2016,0.1560,0.3162,0.0732,0.1490,0.2283,0.1187,
0.3500,0.2915,0.1339,0.0995,0.2355,0.2392,0.0877,0.3571,0.1014,0.0363,
0.1665,0.1226,0.2186,0.1279,0.0842,0.0733,0.0377,0.2216,0.3062,0.0310,
0.0755,0.0583,0.2546,0.2933,0.1682,0.2518,0.1971,0.1473,0.2311,0.2471,
0.3063,0.1526,0.1487,0.3537,0.2753,0.0849,0.1013,0.1622,0.1267,0.2376,
0.0737,0.2755,0.0152,0.1415,0.1344,0.1058,0.0545,0.1047,0.1335,0.3134,
0.1326,0.1222,0.1992,0.0620,0.1313,0.0848,0.2687,0.1396,0.1234,0.0997,
0.0694,0.1022,0.0779,0.0253,0.1012,0.0999,0.0828,0.2950,0.0778,0.1388,
0.2449,0.0978,0.1144,0.1038,0.1613,0.1921,0.2714,0.1467,0.1783,0.1790,
0.1482,0.1383,0.0805,0.0619,0.1934,0.1315,0.1050,0.0702,0.1002,0.1445,
0.0353,0.0400,0.1385,0.0491,0.0520,0.0640,0.1017,0.0837,0.1462,0.0958,
0.0745,0.2942,0.2278,0.1347,0.0907,0.1238,0.1773,0.0623,0.0742,0.1003,
0.0590,0.0719,0.0652,0.1687,0.1199,0.1768,0.1638,0.1360,0.0832,0.2174,
0.1662,0.2023,0.1319,0.0526,0.0287,0.0405,0.1616,0.0730,0.1005,0.0743,
0.0577,0.0481,0.1002,0.0433,0.0838,0.1124,0.2265,0.0436,0.1402,0.0313,
0.0359,0.0696,0.0618,0.0932,0.0097)
library(rstan)
library(tidyverse)
library(tidybayes)
stan_data <- list(y = observe.i,
log_e = log(expect.i),
N = length(observe.i),
x = aff.i - mean(aff.i))
mod1 <- stan(data = stan_data,
file = here("code/models/lab9m1.stan"),
seed = 314)
library(tidyverse)
library(here)
# for bayes stuff
library(rstan)
library(bayesplot)
library(loo)
library(tidybayes)
stan_data <- list(y = observe.i,
log_e = log(expect.i),
N = length(observe.i),
x = aff.i - mean(aff.i))
mod1 <- stan(data = stan_data,
file = here("code/models/lab9m1.stan"),
seed = 314)
mod1
mod2 <- stan(data = stan_data,
file = here("code/models/lab9m2.stan"),
seed = 314)
mod2
mod3 <- stan(data = stan_data,
file = here("code/models/lab9m3.stan"),
seed = 314)
mod3
mod1 <- stan(data = stan_data,
file = here("code/models/lab9m1.stan"),
seed = 314)
summary(mod1)$summary[c("alpha", "beta"),]
mod2 <- stan(data = stan_data,
file = here("code/models/lab9m2.stan"),
seed = 314)
summary(mod2)$summary[c(paste0("alpha[", 1:5, "]"), "beta"),]
mod3 <- stan(data = stan_data,
file = here("code/models/lab9m3.stan"),
seed = 314)
summary(mod3)$summary[c("mu", "sigma", "beta"),]
mod1 |>
gather_draws(log_theta[i]) |>
median_qi() |>
rename(median_mod1 = .value,
lower_mod1 = .lower,
upper_mod1 = .upper,) |>
select(i, median_mod1:upper_mod1) |>
head()
res1 <- mod1 |>
gather_draws(log_theta[i]) |>
median_qi() |>
rename(median_mod1 = .value,
lower_mod1 = .lower,
upper_mod1 = .upper,) |>
select(i, median_mod1:upper_mod1)
res2 <- mod2 |>
gather_draws(log_theta[i]) |>
median_qi() |>
rename(median_mod2 = .value,
lower_mod2 = .lower,
upper_mod2 = .upper,) |>
select(i, median_mod2:upper_mod2)
res3 <- mod3 |>
gather_draws(log_theta[i]) |>
median_qi() |>
rename(median_mod3 = .value,
lower_mod3 = .lower,
upper_mod3 = .upper,) |>
select(i, median_mod3:upper_mod3)
res <- res1 |>
left_join(res2) |>
left_join(res3)
head(res)
res |>
select(median_mod1,
median_mod2,
median_mod3) |>
pivot_longer(median_mod1:median_mod3,
names_to = "model",
values_to = "log_theta") |>
mutate(model = str_remove(model,"median_")) |>
ggplot(aes(log_theta, fill = model)) +
geom_histogram(position = "doge")
res |>
select(median_mod1,
median_mod2,
median_mod3) |>
pivot_longer(median_mod1:median_mod3,
names_to = "model",
values_to = "log_theta") |>
mutate(model = str_remove(model,"median_")) |>
ggplot(aes(log_theta, fill = model)) +
geom_histogram(position = "dodge")
res |>
mutate(deaths = observe.i) |>
mutate(log_smr = log(observe.i/expect.i)) |>
ggplot(aes(log_smr, median_mod1, color = "Model 1")) +
geom_point(aes(size = deaths), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod1, ymax = upper_mode1, color = "Model 1"), alpha = 0.6)
res |>
mutate(deaths = observe.i) |>
mutate(log_smr = log(observe.i/expect.i)) |>
ggplot(aes(log_smr, median_mod1, color = "Model 1")) +
geom_point(aes(size = deaths), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod1, ymax = upper_mod1, color = "Model 1"), alpha = 0.6)
res |>
mutate(deaths = observe.i) |>
mutate(log_smr = log(observe.i/expect.i)) |>
ggplot(aes(log_smr, median_mod1, color = "Model 1")) +
geom_point(aes(size = deaths), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod1, ymax = upper_mod1, color = "Model 1"), alpha = 0.6) +
geom_abline(slope = 1, intercept = 0)
res |>
mutate(deaths = observe.i) |>
mutate(log_smr = log(observe.i/expect.i)) |>
ggplot(aes(log_smr, median_mod1, color = "Model 1")) +
geom_point(aes(size = deaths), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod1, ymax = upper_mod1, color = "Model 1"), alpha = 0.6) +
geom_point(aes(x = log_smr, y = median_mod2, size = deaths, color = "Model 2"), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod2, ymax = upper_mod2, color = "Model 2"), alpha = 0.6) +
geom_point(aes(x = log_smr, y = median_mod3, size = deaths, color = "Model 3"), alpha = 0.6) +
geom_errorbar(aes(ymin = lower_mod3, ymax = upper_mod3, color = "Model 3"), alpha = 0.6) +
geom_abline(slope = 1, intercept = 0)
res |>
mutate(deaths = observe.i) |>
mutate(log_smr = log(observe.i/expect.i)) |>
ggplot(aes(log_smr, median_mod1, color = "Model 1")) +
geom_point(aes(size = deaths), alpha = 0.3) +
geom_errorbar(aes(ymin = lower_mod1, ymax = upper_mod1, color = "Model 1"), alpha = 0.3) +
geom_point(aes(x = log_smr, y = median_mod2, size = deaths, color = "Model 2"), alpha = 0.3) +
geom_errorbar(aes(ymin = lower_mod2, ymax = upper_mod2, color = "Model 2"), alpha = 0.3) +
geom_point(aes(x = log_smr, y = median_mod3, size = deaths, color = "Model 3"), alpha = 0.3) +
geom_errorbar(aes(ymin = lower_mod3, ymax = upper_mod3, color = "Model 3"), alpha = 0.3) +
geom_abline(slope = 1, intercept = 0)
